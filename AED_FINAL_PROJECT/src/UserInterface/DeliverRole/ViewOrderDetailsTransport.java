/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DeliverRole;

import Business.Enterprise.Enterprise;
import Business.Organization.DeliveryOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import UserInterface.SignUpJPanel;
import UserInterface.SystemAdminRole.ManageNetworkJPanel;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lenovo
 */
public class ViewOrderDetailsTransport extends javax.swing.JPanel {

    /**
     * Creates new form ViewOrderDetails
     */
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private Organization org;
//    private MarketWorkRequest request;
    private Image image2;
    public ViewOrderDetailsTransport(JPanel userProcessContainer, UserAccount account, DeliveryOrganization organization, Enterprise enterprise) {
        initComponents();
        this.org=organization;
        System.out.print(organization.getName()+" "+enterprise.getName());
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
//        this.request = request;
        backgroundImage("/resources/imgs/HP2.jpg");
//        populateOrderTable();
         populateTable();
    }
    
    private void backgroundImage(String str){
        try {
            BufferedImage image1 = ImageIO.read(ManageNetworkJPanel.class.getResource(str));
            image2 = image1.getScaledInstance(1200,800,Image.SCALE_SMOOTH);
        } catch (IOException ex) {
            Logger.getLogger(SignUpJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    
    public void paintComponent(Graphics g) {
    super.paintComponent(g);

    // Draw the background image.
    g.drawImage(image2, 0, 0, this);
  }
    
     public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) deliveryRequestTable.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : org.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[6];
            row[0] = request;
            row[1] = request.getSender().getFarmer().getFarmerName();
            row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[3] = request.getMessage();
            row[4] = request.getResolveDate();
            row[5] = request.getStatus();
            model.addRow(row);
        }
    }
    
//    public void populateOrderTable(){
//        DefaultTableModel model = (DefaultTableModel) orderTable.getModel();
//        model.setRowCount(0);
//        
//        for(MarketOrder order : request.getMarketOrderDirectory().getMarketOrderList()){
//            Object[] row = new Object[4];
//            row[0] = order;
//            row[1] = order.getOrderQuantity();
//            Date date = order.getDateOrdered();
//            String dateString = String.valueOf(new SimpleDateFormat("dd/MM/yyyy HH:mm").format(date));
//            row[2] = dateString;
//            row[3] = order.getBuyerContactInfo();
//            model.addRow(row);
//        }
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        deliveryRequestTable = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        completeWorkRequestBtn = new javax.swing.JButton();
        assignWorkRequestBtn = new javax.swing.JButton();
        processWorkRequestBtn = new javax.swing.JButton();

        deliveryRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request Date", "Farmer's Name", "Deliver Agent", "Address", "Resolved Date", "Status"
            }
        ));
        jScrollPane1.setViewportView(deliveryRequestTable);

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/imgs/agronomyAdvancement.JPG"))); // NOI18N

        completeWorkRequestBtn.setText("Completed");
        completeWorkRequestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                completeWorkRequestBtnActionPerformed(evt);
            }
        });

        assignWorkRequestBtn.setText("Assign to me");
        assignWorkRequestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignWorkRequestBtnActionPerformed(evt);
            }
        });

        processWorkRequestBtn.setText("Process Request");
        processWorkRequestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processWorkRequestBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 1327, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(assignWorkRequestBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(93, 93, 93)
                                .addComponent(processWorkRequestBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(105, 105, 105)
                                .addComponent(completeWorkRequestBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 661, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(completeWorkRequestBtn)
                    .addComponent(processWorkRequestBtn)
                    .addComponent(assignWorkRequestBtn))
                .addContainerGap(197, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assignWorkRequestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignWorkRequestBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = deliveryRequestTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please Select a  Row");
            return;
        }

        WorkRequest request = (WorkRequest)deliveryRequestTable.getValueAt(selectedRow, 0);
        if(request.getStatus().equals("Requested"))
        {
            request.setReceiver(userAccount);
            request.setStatus("Picked Up");
            populateTable();
        }
        else{
        JOptionPane.showMessageDialog(null, "Request already assigned");
        }
    }//GEN-LAST:event_assignWorkRequestBtnActionPerformed

    private void processWorkRequestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processWorkRequestBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = deliveryRequestTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please Select a  Row");
            return;
        }

        WorkRequest request = (WorkRequest)deliveryRequestTable.getValueAt(selectedRow, 0);
        if(request.getStatus().equals("Picked Up")&& request.getReceiver()==userAccount)
        {
//            request.setReceiver(userAccount);
            request.setStatus("On the Way");
            populateTable();
        }
        else{
        JOptionPane.showMessageDialog(null, "Request already assigned");
        }
    }//GEN-LAST:event_processWorkRequestBtnActionPerformed

    private void completeWorkRequestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_completeWorkRequestBtnActionPerformed
        // TODO add your handling code here:
         int selectedRow = deliveryRequestTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please Select a  Row");
            return;
        }

        WorkRequest request = (WorkRequest)deliveryRequestTable.getValueAt(selectedRow, 0);
        if(request.getStatus().equals("On the Way")&& request.getReceiver()==userAccount)
        {
            request.setResolveDate(new Date());
            request.setStatus("Completed");
            
            populateTable();
        }
        else{
        JOptionPane.showMessageDialog(null, "Request already assigned");
        }
    }//GEN-LAST:event_completeWorkRequestBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignWorkRequestBtn;
    private javax.swing.JButton completeWorkRequestBtn;
    private javax.swing.JTable deliveryRequestTable;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processWorkRequestBtn;
    // End of variables declaration//GEN-END:variables
}
